swagger: '2.0'
info:
  version: '1.0'
  title: 'retailhub-backend-node'
  description: 'Node REST API retailhub-backend-node'
basePath: '/api'
host: localhost:3000
consumes:
  - application/json
  - application/vnd.api+json
produces:
  - application/json
  - application/vnd.api+json
parameters:
  Authorization:
    name: Authorization
    in: header
    type: string
    required: false
    description: Authorization jwt token
  userId:
    name: userId
    in: path
    required: true
    type: integer
  contactId:
    name: contactId
    in: path
    required: true
    type: integer
  limit:
    name: limit
    in: query
    description: Max records to return per page
    type: integer
  sort:
    name: sort
    in: query
    type: array
    items:
      type: array
      items:
        type: string

paths:
  /register:
    post:
      description: Registration
      produces:
        - application/json
        - application/vnd.api+json
      consumes:
        - application/json
        - application/vnd.api+json
      parameters:
        #- $ref: '#/parameters/Authorization'
        - name: data
          in: body
          required: true
          schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              role:
                type: string
              phoneNumber:
                type: string
              policyConfirmed:
                type: boolean
              emailDomain:
                type: string
              isCompany:
                type: boolean
              companyLegalName:
                type: string
              businessTypeName:
                type: string
              businessType:
                type: string
              password:
                type: string
      responses:
        201:
          description: Token
          schema:
            $ref: "#/definitions/Token"
  /login:
    post:
      description: Login
      produces:
        - application/json
        - application/vnd.api+json
      consumes:
        - application/json
        - application/vnd.api+json
      parameters:
        #- $ref: '#/parameters/Authorization'
        - name: data
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        201:
          description: Token
          schema:
            $ref: "#/definitions/Token"
        403:
         description: Not verified
        404:
         description: No such user
  /tag/create:
    post:
      description: Create tags list
      produces:
        - application/json
        - application/vnd.api+json
      consumes:
        - application/json
        - application/vnd.api+json
      parameters:
        #- $ref: '#/parameters/Authorization'
        - name: data
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              name_lower_case:
                type: string
      responses:
        201:
          description: Token
          schema:
            $ref: "#/definitions/Token"
      tags:
       - tags
  /tags:
    get:
      description: Get tags
      produces:
        - application/json
        - application/vnd.api+json
      consumes:
        - application/json
        - application/vnd.api+json
      parameters:
        - $ref: '#/parameters/Authorization'
      responses:
        201:
          description: Token
          schema:
            $ref: "#/definitions/Token"
      tags:
       - tags
  /startup/{name}:
    get:
      description: Get startup By Name
      produces:
        - application/json
        - application/vnd.api+json
      consumes:
        - application/json
        - application/vnd.api+json
      parameters:
        - $ref: '#/parameters/Authorization'
        - name: name
          in: path
          required: true
      responses:
        201:
          description: Token
          schema:
            $ref: "#/definitions/Token"
      tags:
       - tags
  /tag/update:
    put:
      description: TagUpdate
      produces:
        - application/json
        - application/vnd.api+json
      consumes:
        - application/json
        - application/vnd.api+json
      parameters:
        #- $ref: '#/parameters/Authorization'
        - name: data
          in: body
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              name_lower_case:
                type: string
      responses:
        201:
          description: Token
          schema:
            $ref: "#/definitions/Token"
      tags:
        - tags
  /tag/remove/{id}:
   delete:
     summary: Delete tag
     description: Delete account
     parameters:
      - $ref: '#/parameters/Authorization'
      - name: id
        in: path
        required: true
     responses:
       200:
         description: Tag removed
       401:
         description: Not authorized
       404:
         description: No such user
     tags:
       - tags

  /v2/startup/{id}:
    get:
      summary: Get startup
      description: |
        Get requested startup
      parameters:
        - name: Authorization
          description: Acquired token to authenticate
          required: false
          in: header
          type: string
        - name: id
          description: Id of the requested startup
          in: path
          required: true
          type: integer
      responses:
        200:
          description: The startup with given id
        401:
          description: Not authorized
        404:
          description: No such startup
      tags:
        - startup
  /v2/startup/search:
    get:
      summary: Get colortags
      description: |
        Get colortags
      parameters:
        - name: Authorization
          description: Acquired token to authenticate
          required: false
          in: header
          type: string
        - name: search
          description: search of startup names
          in: query
          required: false
          type: string
        - name: pageNum
          description: page num of records
          in: query
          required: true
          type: string
          default: 0
        - name: size
          description: size of records
          in: query
          required: true
          type: string
          default: 5
        - name: sortfield
          description: sort field of startups
          in: query
          required: false
          type: string
        - name: sortOrder
          description: sort order of startups
          in: query
          required: false
          type: string
        - name: tagIds
          description: tagIds of startups
          in: query
          required: false
          type: string
        - name: categoryId
          description: categoryId of startups
          in: query
          required: false
          type: integer
      responses:
        200:
          description: An array of colortags
          schema:
            type: array
        401:
          description: Not authorized
      tags:
        - startup

definitions:
  Token:
    type: object
    properties:
      token:
        type: string
        description: Token used to authenticate user.
#  User:
#    type: object
#    properties:
#      id:
#        type: integer
#        description: User\'s id.
#      email:
#        type: string
#        description: User\'s email.
#  Notepad:
#    type: object
#    properties:
#      id:
#        type: integer
#        description: Unique identifier representing id of a specific notepad.
#      last_modified:
#        type: string
#        description: Timestamp, when the notepad was last modified.
#      name:
#        type: string
#        description: Name of notepad.
#  Note:
#    type: object
#    properties:
#      id:
#        type: integer
#        description: Unique identifier representing id of a specific note.
#      last_modified:
#        type: string
#        description: Timestamp, when the note was last modified.
#      title:
#        type: string
#        description: Title of the note. By default first 50 characters of its content.
#      content:
#        type: string
#        description: Note's content.
#      colortag_id:
#        type: integer
#        description: ID of the note's colortag.
#      notepad_id:
#        type: integer
#        description: ID of the notepad the note is in.
#  Colortag:
#    type: object
#    properties:
#      id:
#        type: integer
#        description: Unique identifier representing id of a specific colortag.
#      color:
#        type: string
#        description: Color (in HEX) of the colortag.
#  Error:
#    type: object
#    properties:
#      error:
#        type: string
#        description: Error description.